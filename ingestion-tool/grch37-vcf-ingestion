#!/usr/bin/env python3

import mariadb
import pysam
import sys
import os
import time

SUPPORTED_CHROMOSOMES = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","MT"]

password = os.environ['MARIADB_ROOT_PASSWORD']
db = os.environ['MARIADB_DATABASE']
genome='grch37'
number_genotypes = 1000000

# FUNCTIONS
def insert_genotypes(data, count_lines, contig, pos, number_genotypes ):
    print(" - Inserting " + str(number_genotypes) + " genotypes to database... " + str(count_lines) + " entries processed... please wait... (" + str(contig) + "-" + str(pos) + ") -> " + str( round(time.time()) ), file=sys.stderr)
    try:
        conn = mariadb.connect(
            user="root",
            password=password,
            host="mariadb",
            database=db,
            autocommit=True )
    except mariadb.Error as e:
        print(f"Error connecting to the database: {e}", file=sys.stderr)
        sys.exit(1)
    cur = conn.cursor() 
    try:
        cur.executemany("INSERT INTO vcf_genotypes (genome,contig,pos,ref,alt,sample,zigosity,genotype_details) VALUES (?,?,?,?,?,?,?,?)", data) 
    except mariadb.Error as e:
        print(f"Error: {e}", file=sys.stderr)
        sys.exit(1)
    print(" --> done correctly! please wait..", file=sys.stderr)


# WORKFLOW
print("Inserting " + genome + " genotypes to database...", file=sys.stderr)
try:
    conn = mariadb.connect(
        user="root",
        password=password,
        host="mariadb",
        database=db,
        autocommit=True )
except mariadb.Error as e:
    print(f"Error connecting to the database: {e}", file=sys.stderr)
    sys.exit(1)
cur = conn.cursor() 
try:
    cur.execute("INSERT IGNORE INTO available_genomes (genome) VALUES (?)", [genome] )
except mariadb.Error as e:
    print(f"Error: {e}", file=sys.stderr)
    sys.exit(1)

print("Reading VCF file from stdin...", file=sys.stderr)
data = []
count_records = 0
count_lines = 0
file = pysam.VariantFile(sys.stdin)
for record in file:
    if count_records >= number_genotypes:
        insert_genotypes(data, count_lines, contig, pos, number_genotypes )
        count_records = 0
        data = []
    count_lines += 1
    contig = record.contig
    contig = contig.replace("chr", "")
    contig = contig.replace("MT", "M")
    pos = record.pos
    ref = record.ref
    if contig in SUPPORTED_CHROMOSOMES:
        for alt in record.alts:
            for sample in record.samples:
                if not "*" in record.samples[sample].alleles:
                    if not None in record.samples[sample]["GT"]:
                        if alt in record.samples[sample].alleles:
                            zigosity = "HET"
                            #print(record.contig, record.pos, record.samples[sample]["GT"], file=sys.stderr)
                            if len(record.samples[sample]["GT"]) == 2:
                                if record.samples[sample]["GT"][0] == record.samples[sample]["GT"][1]:     
                                    zigosity = "HOM"
                            elif len(record.samples[sample]["GT"]) == 1:
                                zigosity = "HEM"
                            else:
                                zigosity = "NA"
                            genotype_details =  str(record.alts) + " " + str(record.samples[sample].items())
                            genotype_details = genotype_details.replace("'","")
                            genotype_details = genotype_details.replace('"','')
                            if len(genotype_details) > 5000 or len(sample) > 50 or len(ref) > 1000 or len(alt) > 1000 or len(contig) > 2 or len(genome) > 6 or len(str(pos)) > 9:
                                print("\n Error. A parameter from the following record is too long for the table schema... skipping insertion...", file=sys.stderr)
                                print("   -->",genome,contig,pos,ref,alt,sample,zigosity,genotype_details, file=sys.stderr)
                            else:
                                count_records += 1
                                data.append( (genome,contig,pos,ref,alt,sample,zigosity,genotype_details) )

print("Almost finished! Inserting last block of genotypes...", file=sys.stderr)
insert_genotypes(data, count_lines, contig, pos, len(data) )

print("VCF ingestion finished!", file=sys.stderr)
