
log_format main2 '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$proxy_add_x_forwarded_for" "$ssl_client_s_dn_cn" "$proxy_protocol_addr" "$ssl_client_verify"';
access_log /var/log/nginx/access.log main2;

map  $ssl_client_s_dn  $ssl_client_s_dn_cn {
	default "";
	~(^|,)CN=(?<CN>[^,]+) $CN;
}

limit_req_zone $binary_remote_addr zone=variant_request_limit:10m rate=5r/s;

server {

	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
    
}

server {

    listen 443 ssl;

    ssl_certificate              /server-certificates/${FRONTEND_CERT_FILENAME};
    ssl_certificate_key          /server-certificates/${FRONTEND_KEY_FILENAME};
       
    location / {
        auth_basic              "var-node";
        auth_basic_user_file    /data/.htpasswd;
        proxy_pass              http://web-server;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Prefix /;
    }

    location /favicon.ico {
        access_log off;
        return 204;
    }

}

server {

    set $client_verifiaction ${CLIENT_VERIFICATION};

    limit_req zone=variant_request_limit burst=10 nodelay;

    listen 5000 ssl;
    proxy_ssl_server_name       off;

    ssl_certificate             /server-certificates/${FRONTEND_CERT_FILENAME};
    ssl_certificate_key         /server-certificates/${FRONTEND_KEY_FILENAME};
    ssl_client_certificate      /network-configuration/${CA_CERT_FILENAME};

    ssl_verify_client           optional;
    ssl_prefer_server_ciphers   on;
    ssl_protocols               TLSv1.1 TLSv1.2;
    ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';
    
    keepalive_timeout           10;
    ssl_session_timeout         5m;

    location / {
        error_page 418 = @default;
        error_page 419 = @waf_verification;
        if ( $client_verifiaction = "var-node" ) { return 418; }
        if ( $client_verifiaction = "waf" ) { return 419; }
    }

    location @default {

        #real_ip_header X-Forwarded-For;
        #real_ip_recursive on;

        if ( $ssl_client_verify != SUCCESS ) {
            return 403;
        }
        if ( $ssl_client_s_dn_cn !~ $proxy_protocol_addr ) {
			return 403;
		}
        proxy_pass              http://variant-server;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Prefix /;
    }

    location @waf_verification {
        deny                    all;
        allow                   ${WAF_IP};
        proxy_pass              http://variant-server;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Prefix /;
    }

}
