
server {

	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
    
}

server {

    listen 443 ssl;
    ssl_certificate              /server-certificates/nginx-selfsigned.crt;
    ssl_certificate_key          /server-certificates/nginx-selfsigned.key;

    location / {
        #auth_basic              "Restricted Access";
        #auth_basic_user_file    /etc/nginx/.htpasswd;
        proxy_pass              http://webapp-server;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Prefix /;
    }

    location /favicon.ico {
        access_log off;
        return 204;
    }

}

server {

    listen 5000 ssl;
    proxy_ssl_server_name       on;
    ssl_certificate             /network-configuration/cert.pem;
    ssl_certificate_key         /network-configuration/key.pem;
    ssl_client_certificate      /network-configuration/ca-cert.pem;
    ssl_verify_client           on;
    ssl_prefer_server_ciphers   on;
    ssl_protocols               TLSv1.1 TLSv1.2;
    ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';
    
    #allow                      172.26.0.1;
    #deny                       all;
    
    keepalive_timeout           10;
    ssl_session_timeout         5m;

    location / {
        proxy_pass              http://variant-server;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Prefix /;
    }

}
